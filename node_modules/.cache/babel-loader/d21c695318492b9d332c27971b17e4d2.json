{"ast":null,"code":"var _jsxFileName = \"F:\\\\New folder\\\\covid-tracker\\\\src\\\\components\\\\charts\\\\charts.component.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api/';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './charts.module.css';\n\nconst Charts = () => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData((await fetchDailyData()));\n    };\n\n    fetchAPI();\n  });\n  const Linechart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        label: 'Inficted',\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        borderColor: \"#3333ff\",\n        fill: true\n      }, {\n        label: 'Died',\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        borderColor: \"rgba(250,0,0,0.5)\",\n        fill: true\n      }, {}]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"charts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"charts\"));\n};\n\nexport default Charts;","map":{"version":3,"sources":["F:/New folder/covid-tracker/src/components/charts/charts.component.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Charts","dailyData","setDailyData","fetchAPI","Linechart","length","labels","map","date","datasets","label","data","confirmed","borderColor","fill","deaths"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AAEA,SAAQC,cAAR,QAA6B,YAA7B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAMA,MAAMC,MAAM,GAAE,MAAI;AACd,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA2BR,QAAQ,CAAC,EAAD,CAAzC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMQ,QAAQ,GAAE,YAAU;AACxBD,MAAAA,YAAY,EAAC,MAAMN,cAAc,EAArB,EAAZ;AACD,KAFD;;AAGAO,IAAAA,QAAQ;AACX,GALQ,CAAT;AAOA,QAAMC,SAAS,GACXH,SAAS,CAACI,MAAV,gBACE,oBAAC,IAAD;AACE,IAAA,IAAI,EACA;AACIC,MAAAA,MAAM,EAACL,SAAS,CAACM,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAUA,IAAxB,CADX;AAEIC,MAAAA,QAAQ,EAAC,CAAC;AACNC,QAAAA,KAAK,EAAC,UADA;AAENC,QAAAA,IAAI,EAAEV,SAAS,CAACM,GAAV,CAAc,CAAC;AAACK,UAAAA;AAAD,SAAD,KAAgBA,SAA9B,CAFA;AAGNC,QAAAA,WAAW,EAAE,SAHP;AAINC,QAAAA,IAAI,EAAE;AAJA,OAAD,EAMT;AACIJ,QAAAA,KAAK,EAAC,MADV;AAEIC,QAAAA,IAAI,EAAEV,SAAS,CAACM,GAAV,CAAc,CAAC;AAACQ,UAAAA;AAAD,SAAD,KAAaA,MAA3B,CAFV;AAGIF,QAAAA,WAAW,EAAE,mBAHjB;AAIIC,QAAAA,IAAI,EAAE;AAJV,OANS,EAaT,EAbS;AAFb,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAwBK,IAzBT;AAgCA,sBAEA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAFA;AAKF,CA/CF;;AAiDA,eAAed,MAAf","sourcesContent":["import React , {useState, useEffect} from 'react';\r\n\r\nimport {fetchDailyData} from '../../api/';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './charts.module.css';\r\n\r\n\r\n\r\n\r\n\r\nconst Charts =()=>{\r\n    const [dailyData ,setDailyData] =useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI= async ()=>{\r\n          setDailyData(await fetchDailyData())\r\n        }\r\n        fetchAPI();\r\n    })\r\n\r\n    const Linechart= (\r\n        dailyData.length?\r\n        ( <Line \r\n            data={\r\n                {\r\n                    labels:dailyData.map(({date})=>date),\r\n                    datasets:[{\r\n                        label:'Inficted',\r\n                        data: dailyData.map(({confirmed})=> confirmed),\r\n                        borderColor: \"#3333ff\",\r\n                        fill: true\r\n                    },\r\n                    {\r\n                        label:'Died',\r\n                        data: dailyData.map(({deaths})=> deaths),\r\n                        borderColor: \"rgba(250,0,0,0.5)\",\r\n                        fill: true\r\n\r\n                    },\r\n                    {\r\n\r\n                    }]\r\n                }\r\n            }\r\n        \r\n        />): null\r\n    )\r\n\r\n    \r\n\r\n    \r\n    \r\n    return(\r\n\r\n    <div className=\"charts\">\r\n        <h1>charts</h1>\r\n    </div>\r\n)}\r\n\r\nexport default Charts"]},"metadata":{},"sourceType":"module"}