{"ast":null,"code":"var _jsxFileName = \"F:\\\\New folder\\\\covid-tracker\\\\src\\\\components\\\\charts\\\\charts.component.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api/';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './charts.module.css';\n\nconst Charts = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData((await fetchDailyData()));\n    };\n\n    fetchAPI();\n  }, []);\n  const Linechart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        label: 'Inficted',\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        borderColor: \"#3333ff\",\n        fill: true\n      }, {\n        label: 'Died',\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        borderColor: \"rgba(250,0,0,0.5)\",\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }) : null;\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, country ? barChart : Linechart);\n};\n\nexport default Charts;","map":{"version":3,"sources":["F:/New folder/covid-tracker/src/components/charts/charts.component.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Charts","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","Linechart","length","labels","map","date","datasets","label","borderColor","fill","barChart","backgroundColor","value","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AAEA,SAAQC,cAAR,QAA6B,YAA7B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAMA,MAAMC,MAAM,GAAE,CAAC;AAACC,EAAAA,IAAI,EAAC;AAACC,IAAAA,SAAD;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,GAAN;AAAsCC,EAAAA;AAAtC,CAAD,KAAmD;AAC7D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA2Bb,QAAQ,CAAC,EAAD,CAAzC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMa,QAAQ,GAAE,YAAU;AACxBD,MAAAA,YAAY,EAAC,MAAMX,cAAc,EAArB,EAAZ;AACD,KAFD;;AAGAY,IAAAA,QAAQ;AACX,GALQ,EAKP,EALO,CAAT;AAQA,QAAMC,SAAS,GACXH,SAAS,CAACI,MAAV,gBACE,oBAAC,IAAD;AACE,IAAA,IAAI,EACA;AACIC,MAAAA,MAAM,EAACL,SAAS,CAACM,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAUA,IAAxB,CADX;AAEIC,MAAAA,QAAQ,EAAC,CAAC;AACNC,QAAAA,KAAK,EAAC,UADA;AAENd,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAACV,UAAAA;AAAD,SAAD,KAAgBA,SAA9B,CAFA;AAGNc,QAAAA,WAAW,EAAE,SAHP;AAINC,QAAAA,IAAI,EAAE;AAJA,OAAD,EAMT;AACIF,QAAAA,KAAK,EAAC,MADV;AAEId,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAACR,UAAAA;AAAD,SAAD,KAAaA,MAA3B,CAFV;AAGIY,QAAAA,WAAW,EAAE,mBAHjB;AAIIC,QAAAA,IAAI,EAAE;AAJV,OANS;AAFb,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAsBK,IAvBT;AA0BA,QAAMC,QAAQ,GACVhB,SAAS,gBACP,oBAAC,GAAD;AACE,IAAA,IAAI,EAAE;AACJS,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADJ;AAEJG,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,QADT;AAEEI,QAAAA,eAAe,EAAE,CAAC,sBAAD,EAAyB,sBAAzB,EAAiD,sBAAjD,CAFnB;AAGElB,QAAAA,IAAI,EAAE,CAACC,SAAS,CAACkB,KAAX,EAAkBjB,SAAS,CAACiB,KAA5B,EAAmChB,MAAM,CAACgB,KAA1C;AAHR,OADQ;AAFN,KADR;AAWE,IAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADD;AAEPC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE,IAAX;AAAiBE,QAAAA,IAAI,EAAG,oBAAmBnB,OAAQ;AAAnD;AAFA,KAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,GAiBL,IAlBR;AAqBA,sBAEA;AAAK,IAAA,SAAS,EAAEN,MAAM,CAAC0B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKpB,OAAO,GAACa,QAAD,GAAUT,SADtB,CAFA;AAKF,CA/DF;;AAiEA,eAAeT,MAAf","sourcesContent":["import React , {useState, useEffect} from 'react';\r\n\r\nimport {fetchDailyData} from '../../api/';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './charts.module.css';\r\n\r\n\r\n\r\n\r\n\r\nconst Charts =({data:{confirmed, recovered, deaths}, country} )=>{\r\n    const [dailyData ,setDailyData] =useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI= async ()=>{\r\n          setDailyData(await fetchDailyData())\r\n        }\r\n        fetchAPI();\r\n    },[])\r\n\r\n\r\n    const Linechart= (\r\n        dailyData.length?\r\n        ( <Line \r\n            data={\r\n                {\r\n                    labels:dailyData.map(({date})=>date),\r\n                    datasets:[{\r\n                        label:'Inficted',\r\n                        data: dailyData.map(({confirmed})=> confirmed),\r\n                        borderColor: \"#3333ff\",\r\n                        fill: true\r\n                    },\r\n                    {\r\n                        label:'Died',\r\n                        data: dailyData.map(({deaths})=> deaths),\r\n                        borderColor: \"rgba(250,0,0,0.5)\",\r\n                        fill: true\r\n\r\n                    },\r\n                    ]\r\n                }\r\n            }\r\n        \r\n        />): null\r\n    )\r\n \r\n    const barChart = (\r\n        confirmed ? (\r\n          <Bar\r\n            data={{\r\n              labels: ['Infected', 'Recovered', 'Deaths'],\r\n              datasets: [\r\n                {\r\n                  label: 'People',\r\n                  backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                  data: [confirmed.value, recovered.value, deaths.value],\r\n                },\r\n              ],\r\n            }}\r\n            options={{\r\n              legend: { display: false },\r\n              title: { display: true, text: `Current state in ${country}` },\r\n            }}\r\n          />\r\n        ) : null\r\n      );\r\n\r\n    return(\r\n\r\n    <div className={styles.container}>\r\n        {country?barChart:Linechart}\r\n    </div>\r\n)}\r\n\r\nexport default Charts"]},"metadata":{},"sourceType":"module"}